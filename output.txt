===== src/index.css =====
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  height: 100vh;
  background-color: gray;
}
===== src/App.jsx =====
import UserList from './UserList';

function App() {
  return (
    <div style={{ textAlign: 'center', marginTop: '50px' }}>
      <UserList />
    </div>
  );
}

export default App;
===== src/main.jsx =====
// src/main.jsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

ReactDOM.createRoot(document.getElementById('root')).render(<App />);
===== src/store/userStore.js =====
import { create } from 'zustand';

const useUserStore = create((set) => ({
  users: [],
  loading: false,
  error: null,

  fetchUsers: async () => {
    set({
      loading: true,
      error: null,
    });
    try {
      const res = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await res.json();
      set({ users: data, loading: false });
    } catch (err) {
      set({ error: err.message, loading: false });
    }
  },
}));

export default useUserStore;
===== src/components/UserList.jsx =====
import useUserStore from '../store/userStore';
import { useEffect } from 'react';

function UserList() {
  const users = useUserStore((state) => state.users);
  const loading = useUserStore((state) => state.loading);
  const error = useUserStore((state) => state.error);
  const fetchUsers = useUserStore((state) => state.fetchUsers);

  useEffect(() => {
    fetchUsers();
  }, [fetchUsers]);

  if (loading) {
    return <p>Loading...</p>;
  }
  if (error) {
    return <p>Error: {error}</p>;
  }

  return (
    <ul>
      {users.map((u) => (
        <li key={u.id}>{u.name}</li>
      ))}
    </ul>
  );
}

export default UserList;
