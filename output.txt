===== src/index.css =====
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  height: 100vh;
  background-color: gray;
}
===== src/App.jsx =====
import { lazy, Suspense } from 'react';
import { createBrowserRouter, RouterProvider } from 'react-router-dom';

import ErrorPage from './pages/ErrorPage';
import LoadingFallback from './pages/LoadingFallBack';

// ‚è≥ Startup delay (only for Layout & Home)
const delayImport = (importPromise) =>
  new Promise((resolve) => {
    setTimeout(() => resolve(importPromise), 2000);
  });

const Layout = lazy(() => delayImport(import('./pages/Layout')));
const Home = lazy(() => delayImport(import('./pages/Home')));

// üöÄ Lazy load everything else
const About = lazy(() => import('./pages/About'));
const Contact = lazy(() => import('./pages/Contact'));
const Products = lazy(() => import('./pages/Products'));
const Electronics = lazy(() => import('./pages/Electronics'));
const Clothing = lazy(() => import('./pages/Clothing'));
const Books = lazy(() => import('./pages/Books'));
const Product = lazy(() => import('./pages/Product'));
const Dashboard = lazy(() => import('./pages/Dashboard'));
const User = lazy(() => import('./pages/User'));
const UserDetails = lazy(() => import('./pages/UserDetails'));
const UserSettings = lazy(() => import('./pages/UserSettings'));
const Login = lazy(() => import('./pages/Login'));
const Profile = lazy(() => import('./pages/Profile'));
const PrivateRoute = lazy(() => import('./pages/PrivateRoute'));
const NotFound = lazy(() => import('./pages/NotFound'));
const Logger = lazy(() => import('./pages/Logger'));
const Cart = lazy(() => import('./pages/Cart'));

// ‚úÖ Example loader for Products (simulate API fail)
export async function productsLoader() {
  const res = await fetch('/fake-endpoint'); // wrong URL to test
  if (!res.ok) throw new Response('Failed to fetch products', { status: 500 });
  return res.json();
}

// ‚úÖ Router setup
const router = createBrowserRouter([
  {
    path: '/',
    element: (
      <Suspense fallback={<LoadingFallback />}>
        <Layout />
      </Suspense>
    ),
    errorElement: <ErrorPage />,
    children: [
      {
        index: true,
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <Home />
          </Suspense>
        ),
      },
      {
        path: 'about',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <About />
          </Suspense>
        ),
      },
      {
        path: 'contact',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <Contact />
          </Suspense>
        ),
      },
      {
        path: 'products',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <Products />
          </Suspense>
        ),
        loader: productsLoader,
        errorElement: <ErrorPage />,
        children: [
          {
            path: 'electronics',
            element: (
              <Suspense fallback={<LoadingFallback />}>
                <Electronics />
              </Suspense>
            ),
          },
          {
            path: 'clothing',
            element: (
              <Suspense fallback={<LoadingFallback />}>
                <Clothing />
              </Suspense>
            ),
          },
          {
            path: 'books',
            element: (
              <Suspense fallback={<LoadingFallback />}>
                <Books />
              </Suspense>
            ),
          },
        ],
      },
      {
        path: 'product/:productId',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <Product />
          </Suspense>
        ),
      },
      {
        path: 'user/:userName',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <User />
          </Suspense>
        ),
        children: [
          {
            path: 'details',
            element: (
              <Suspense fallback={<LoadingFallback />}>
                <UserDetails />
              </Suspense>
            ),
            children: [
              {
                path: 'settings',
                element: (
                  <Suspense fallback={<LoadingFallback />}>
                    <UserSettings />
                  </Suspense>
                ),
              },
            ],
          },
        ],
      },
      {
        path: 'login',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <Login />
          </Suspense>
        ),
      },
      {
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <PrivateRoute />
          </Suspense>
        ),
        children: [
          {
            path: 'dashboard',
            element: (
              <Suspense fallback={<LoadingFallback />}>
                <Dashboard />
              </Suspense>
            ),
          },
          {
            path: 'profile',
            element: (
              <Suspense fallback={<LoadingFallback />}>
                <Profile />
              </Suspense>
            ),
          },
        ],
      },
      {
        path: 'cart',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <Cart />
          </Suspense>
        ),
      },
      {
        path: '*',
        element: (
          <Suspense fallback={<LoadingFallback />}>
            <NotFound />
          </Suspense>
        ),
      },
    ],
  },
]);

function App() {
  return (
    <div className="min-h-screen bg-gray-900 p-6 text-white">
      <h1 className="mb-2 text-3xl font-bold">Main Page</h1>
      <h2 className="mb-6 text-xl">Main Navigation</h2>

      <div className="rounded-lg bg-gray-800 p-6 shadow-lg">
        <Suspense fallback={<LoadingFallback />}>
          <Logger />
        </Suspense>
        <RouterProvider router={router} />
      </div>
    </div>
  );
}

export default App;
===== src/pages/Books.jsx =====
export default function Books() {
  return (
    <div className="flex min-h-[30vh] flex-col items-center justify-center space-y-4 rounded-xl bg-purple-800 p-6 text-white shadow-lg">
      <h2 className="text-2xl font-bold">Books Category</h2>
      <p className="text-gray-200">
        This is the <span className="font-semibold text-yellow-300">Books</span>{' '}
        section. Discover stories, knowledge, and imagination here.
      </p>
    </div>
  );
}
===== src/pages/PrivateRoute.jsx =====
import { Navigate, Outlet } from 'react-router-dom';

localStorage.setItem('auth', 'false');
function PrivateRoute() {
  const isLogginIn = localStorage.getItem('auth') === 'true';
  if (!isLogginIn) {
    return <Navigate to="/login" replace />;
  }
  return <Outlet />;
}

export default PrivateRoute;
===== src/pages/Clothing.jsx =====
export default function Clothing() {
  return (
    <div className="flex min-h-[30vh] flex-col items-center justify-center space-y-4 rounded-xl bg-green-800 p-6 text-white shadow-lg">
      <h2 className="text-2xl font-bold">Clothing Category</h2>
      <p className="text-gray-200">
        This is the{' '}
        <span className="font-semibold text-yellow-300">Clothing</span> section.
        Explore the latest fashion, styles, and trends here.
      </p>
    </div>
  );
}
===== src/pages/Profile.jsx =====
// src/pages/Profile.jsx
function Profile() {
  const username = localStorage.getItem('username') || 'Guest';

  return (
    <div className="flex min-h-[40vh] flex-col items-center justify-center space-y-6 rounded-xl bg-gray-800 p-6 text-white shadow-lg">
      <h2 className="text-3xl font-bold">Profile</h2>

      <p className="text-lg text-gray-300">
        Welcome,{' '}
        <span className="font-semibold text-yellow-400">{username}</span> üéâ
      </p>

      <div className="w-full max-w-md space-y-4 rounded-lg bg-gray-700 p-4 shadow-md">
        <p className="text-gray-300">üìß Email: user@example.com</p>
        <p className="text-gray-300">üìç Location: India</p>
        <p className="text-gray-300">‚≠ê Membership: Free User</p>
      </div>
    </div>
  );
}

export default Profile;
===== src/pages/productsLoader.js =====
// ‚úÖ Loader for Products (works with public/products.json)
export async function productsLoader() {
  const res = await fetch('/products.json'); // fetches from public folder
  if (!res.ok) throw new Response('Failed to fetch products', { status: 500 });
  return res.json();
}
===== src/pages/Products.jsx =====
import { NavLink, Outlet, useLoaderData } from 'react-router-dom';

export default function Products() {
  const products = useLoaderData();

  return (
    <div className="p-4">
      <h1 className="mb-4 text-2xl font-bold">Products Page</h1>

      {products && products.length > 0 ? (
        <ul className="mb-4 space-y-2">
          {products.map((p) => (
            <li
              key={p.id}
              className="rounded bg-gray-700 p-2 hover:bg-gray-600"
            >
              {p.name} - ${p.price}
            </li>
          ))}
        </ul>
      ) : (
        <p className="mb-4 text-gray-400">No products available.</p>
      )}

      <nav className="mb-4 flex space-x-4">
        <NavLink to="electronics">Electronics</NavLink>
        <NavLink to="clothing">Clothing</NavLink>
        <NavLink to="books">Books</NavLink>
      </nav>

      <Outlet />
    </div>
  );
}
===== src/pages/NotFound.jsx =====
function NotFound() {
  return (
    <div className="flex min-h-[60vh] flex-col items-center justify-center space-y-4 text-center">
      <h1 className="text-4xl font-bold text-red-500">404</h1>
      <h2 className="text-2xl font-semibold">Page Not Found</h2>
      <p className="text-gray-400">
        Sorry, the page you‚Äôre looking for doesn‚Äôt exist.
      </p>
      <a
        href="/"
        className="rounded-md bg-blue-500 px-4 py-2 text-white transition hover:bg-blue-600"
      >
        Go Home
      </a>
    </div>
  );
}

export default NotFound;
===== src/pages/User.jsx =====
import { useParams, useNavigate, Outlet, NavLink } from 'react-router-dom';

function User() {
  const navigate = useNavigate();
  const { userName } = useParams();

  function LogOut() {
    navigate('/login', { replace: true });
  }

  return (
    <div className="space-y-4">
      <h1 className="text-2xl font-semibold">User Page</h1>
      <h2 className="text-gray-300">
        User's Name: <span className="text-blue-400">{userName}</span>
      </h2>

      <button
        onClick={LogOut}
        className="rounded-lg bg-red-500 px-4 py-2 text-white shadow-md transition hover:bg-red-600"
      >
        Log Out
      </button>

      <NavLink
        to="details"
        className="inline-block rounded-lg bg-blue-500 px-5 py-2 text-white transition hover:bg-blue-600"
      >
        View Details
      </NavLink>
      <hr />
      <Outlet />
    </div>
  );
}

export default User;
===== src/pages/Login.jsx =====
import { useState } from 'react';
import { Navigate, useNavigate } from 'react-router-dom';

function Login() {
  const isLoggedIn = localStorage.getItem('auth') === 'true';

  const [userName, setUserName] = useState('');
  const navigate = useNavigate();

  if (isLoggedIn) {
    return <Navigate to="/dashboard" replace />;
  }
  function handleLogin() {
    if (userName.trim() === '') {
      navigate('/contact', { replace: true });
    } else {
      localStorage.setItem('auth', 'true');
      localStorage.setItem('username', userName); // ‚úÖ save username
      navigate('/dashboard', { replace: true });
    }
  }

  function Change(e) {
    setUserName(e.target.value);
  }

  return (
    <div className="flex min-h-[30vh] flex-col items-center justify-center space-y-6 bg-gray-700">
      <h2 className="text-3xl font-bold text-white">Login Page</h2>

      <input
        type="text"
        value={userName}
        onChange={Change}
        placeholder="Enter username"
        className="w-64 rounded-lg border border-gray-300 px-4 py-2 text-gray-800 focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-400"
      />

      <button
        onClick={handleLogin}
        className="rounded-lg bg-blue-500 px-6 py-2 text-lg font-medium text-white shadow-md transition-all hover:bg-blue-600 active:scale-95"
      >
        Login
      </button>
    </div>
  );
}

export default Login;
===== src/pages/Layout.jsx =====
import { NavLink, Outlet, useLocation } from 'react-router-dom';

export default function Layout() {
  const location = useLocation();
  return (
    <div>
      <nav className="mb-8">
        <ul className="flex flex-wrap gap-4">
          <li>
            <NavLink
              to="/"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Home
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/about"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              About
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/contact"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Contact
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/user/sabir"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Sabir Profile
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/user/alice"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Alice Profile
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/user/bob"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Bob Profile
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/product/1"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Product 1
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/product/2"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Product 2
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/login"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Login
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/dashboard"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Dashboard
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/products"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Products
            </NavLink>
          </li>
          <li>
            <NavLink
              to="/profile"
              className={({ isActive }) =>
                `rounded-md px-4 py-2 transition ${
                  isActive ? 'bg-blue-500' : 'bg-gray-700 hover:bg-gray-600'
                }`
              }
            >
              Profile
            </NavLink>
          </li>
        </ul>
      </nav>
      <hr />

      {/* Main content */}
      <main className="flex-grow px-4">
        <strong>Location: {location.pathname}</strong>
        {location.pathname === '/about' && (
          <div>Welcome to the About Page!</div>
        )}
        <Outlet /> {/* Child pages render here */}
      </main>

      {/* Footer */}
      <footer className="mt-8 bg-gray-900 py-4 text-center text-sm text-gray-400">
        ¬© {new Date().getFullYear()} Your Website Name ‚Äî All Rights Reserved
      </footer>
    </div>
  );
}
===== src/pages/Home.jsx =====
import { useNavigate } from 'react-router-dom';

function Home() {
  const navigate = useNavigate();
  return (
    <div className="space-y-4">
      <h2 className="text-2xl font-semibold">This is Home Page</h2>
      <p className="text-gray-300">
        Welcome to the homepage. Use the navigation above to explore.
      </p>
      <button onClick={() => navigate('/products')}>Products</button>
    </div>
  );
}
export default Home;
===== src/pages/Cart.jsx =====
// src/pages/Cart.jsx
import { useLocation } from 'react-router-dom';

function Cart() {
  const location = useLocation();
  const fromPage = location.state?.from || 'unknown'; // fallback

  return (
    <div className="space-y-4 rounded-lg bg-gray-800 p-6 shadow-md">
      <h1 className="text-2xl font-semibold text-white">Cart Page</h1>
      <p className="text-gray-300">
        You came from: <span className="text-blue-400">{fromPage}</span>
      </p>
    </div>
  );
}

export default Cart;
===== src/pages/About.jsx =====
import { useNavigate } from 'react-router-dom';

function About() {
  const navigate = useNavigate();
  function GoBack() {
    navigate('/');
  }

  return (
    <div className="space-y-6 rounded-lg bg-gray-800 p-6 shadow-md">
      <h2 className="text-3xl font-semibold text-white">This is About Page</h2>
      <p className="text-lg text-gray-300">
        Learn more about us here. We are building something amazing!
      </p>
      <button
        onClick={GoBack}
        className="rounded-lg bg-blue-500 px-6 py-2 font-medium text-white shadow-md transition hover:bg-blue-600 active:scale-95"
      >
        Back to Home
      </button>
    </div>
  );
}

export default About;
===== src/pages/UserDetails.jsx =====
import { useParams, useNavigate, Outlet, NavLink } from 'react-router-dom';

function UserDetails() {
  const { userName } = useParams();
  const navigate = useNavigate();

  function GoBack() {
    navigate(-1);
  }

  return (
    <div className="space-y-6 rounded-lg bg-gray-800 p-6 shadow-lg">
      <h2 className="text-2xl font-bold text-blue-400">
        Extra Details for {userName}
      </h2>

      <p className="text-gray-300">
        This section contains additional information about{' '}
        <span className="font-semibold text-blue-300">{userName}</span>.
      </p>

      <button
        onClick={GoBack}
        className="rounded-lg bg-red-500 px-4 py-2 text-white shadow-md transition hover:bg-red-600"
      >
        Go Back
      </button>

      <div>
        <NavLink
          to="settings"
          className="rounded-lg bg-green-500 px-4 py-2 text-white shadow-md transition hover:bg-green-600"
        >
          Settings
        </NavLink>
      </div>

      <Outlet />
    </div>
  );
}

export default UserDetails;
===== src/pages/UserSettings.jsx =====
import { useParams } from 'react-router-dom';

function UserSettings() {
  const { userName } = useParams();

  return (
    <div className="flex min-h-[60vh] flex-col items-center justify-center rounded-lg bg-gray-800 p-6 shadow-lg">
      <h1 className="mb-4 text-3xl font-bold text-blue-400">
        Settings for {userName}
      </h1>
      <p className="text-gray-300">
        Here you can manage preferences and account settings for{' '}
        <span className="font-semibold text-blue-300">{userName}</span>.
      </p>
    </div>
  );
}

export default UserSettings;
===== src/pages/Electronics.jsx =====
export default function Electronics() {
  return (
    <div className="flex min-h-[30vh] flex-col items-center justify-center space-y-4 rounded-xl bg-blue-800 p-6 text-white shadow-lg">
      <h2 className="text-2xl font-bold">Electronics Category</h2>
      <p className="text-gray-200">
        This is the{' '}
        <span className="font-semibold text-yellow-300">Electronics</span>{' '}
        section. Find gadgets, devices, and modern tech here.
      </p>
    </div>
  );
}
===== src/pages/Logger.jsx =====
import { useLocation } from 'react-router-dom';
import { useEffect } from 'react';

function Logger() {
  const location = useLocation();
  useEffect(() => {
    console.log('Navigated to:', location.pathname);
  }, [location.pathname]);

  return null;
}

export default Logger;
===== src/pages/ErrorPage.jsx =====
// src/pages/ErrorPage.jsx
import { useRouteError } from 'react-router-dom';

export default function ErrorPage() {
  const error = useRouteError();
  console.error(error);

  return (
    <div style={{ padding: '2rem', textAlign: 'center' }}>
      <h1>Oops! Something went wrong üò¢ sabir</h1>
      <p>{error.statusText || error.message}</p>
    </div>
  );
}
===== src/pages/LoadingFallBack.jsx =====
function LoadingFallback() {
  return (
    <div className="flex h-60 items-center justify-center">
      <div className="h-12 w-12 animate-spin rounded-full border-4 border-dashed border-blue-500"></div>
    </div>
  );
}
export default LoadingFallback;
===== src/pages/Contact.jsx =====
function Contact() {
  return (
    <div className="space-y-4">
      <h2 className="text-2xl font-semibold">This is Contact Page</h2>
      <p className="text-gray-300">
        Reach out to us anytime. We would love to hear from you!
      </p>
    </div>
  );
}
export default Contact;
===== src/pages/Dashboard.jsx =====
// src/pages/Dashboard.jsx
import { Navigate, useNavigate } from 'react-router-dom';

function Dashboard() {
  const isLoggedIn = localStorage.getItem('auth') === 'true';
  const navigate = useNavigate();

  if (!isLoggedIn) {
    return <Navigate to="/login" replace />;
  }

  function LogOut() {
    localStorage.removeItem('auth');
    localStorage.removeItem('username'); // ‚úÖ clear username too
    navigate('/login', { replace: true });
  }

  return (
    <div className="space-y-4">
      <h2 className="text-2xl font-semibold">Dashboard</h2>
      <p className="text-gray-300">
        Welcome to your dashboard! You cannot go back to login if you used
        replace.
      </p>

      <button
        onClick={LogOut}
        className="rounded-lg bg-red-500 px-6 py-2 font-medium text-white shadow-md transition hover:bg-red-600 active:scale-95"
      >
        Log Out
      </button>
    </div>
  );
}

export default Dashboard;
===== src/pages/Product.jsx =====
import { useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';

function Product() {
  const { productId } = useParams();
  const navigate = useNavigate();

  useEffect(() => {
    if (productId === '0') {
      navigate('/not-found', { replace: true });
    }
  }, [productId, navigate]);

  function goToCart() {
    navigate('/cart', { state: { from: 'products' } });
  }

  function goBack() {
    navigate(-1);
  }

  return (
    <div className="mx-auto mt-8 max-w-md space-y-6 rounded-lg bg-gray-800 p-6 shadow-lg">
      <h1 className="text-3xl font-bold text-white">Product Page</h1>
      <h2 className="text-gray-300">
        Product ID: <span className="text-blue-400">{productId}</span>
      </h2>

      <div className="flex gap-4">
        <button
          onClick={goBack}
          className="rounded-lg bg-gray-600 px-6 py-2 font-medium text-white shadow-md transition hover:bg-gray-700 active:scale-95"
        >
          Go Back
        </button>

        <button
          onClick={goToCart}
          className="rounded-lg bg-green-500 px-6 py-2 font-medium text-white shadow-md transition hover:bg-green-600 active:scale-95"
        >
          Go to Cart
        </button>
      </div>
    </div>
  );
}

export default Product;
===== src/main.jsx =====
import React from 'react';
import ReactDOM from 'react-dom/client';

import App from './App';
import { BrowserRouter } from 'react-router-dom';
import './index.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <BrowserRouter>
    <App />
  </BrowserRouter>,
);
