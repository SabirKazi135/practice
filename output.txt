===== src/Name.jsx =====
===== src/index.css =====
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  height: 100vh;
  background-color: gray;
}
===== src/App.jsx =====
// src/App.jsx
import NameDisplay from './components/NameDisplay';
import NameChanger from './components/NameChanger';
import ThemeToggle from './components/ThemeToggle';
import CountWatcher from './components/CountWatcher';

function App() {
  return (
    <div className="flex min-h-screen flex-col items-center justify-center space-y-8 bg-gray-900 p-6 text-white">
      {/* Display current name */}
      <NameDisplay />

      {/* Change the name */}
      <NameChanger />

      {/* Toggle theme */}
      <ThemeToggle />

      {/* Counter watcher with conditional logic */}
      <CountWatcher />
    </div>
  );
}

export default App;
===== src/main.jsx =====
import React from 'react';
import ReactDOM from 'react-dom/client';

import App from './App';
import { BrowserRouter } from 'react-router-dom';
import './index.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <BrowserRouter>
    <App />
  </BrowserRouter>,
);
===== src/store/useStore.jsx =====
import { create } from 'zustand';

const useStore = create((set, get) => ({
  name: 'sabir',
  theme: 'dark',
  count: 0,

  setName: (newName) => set({ name: newName }),

  toggleTheme: () =>
    set((state) => ({
      theme: state.theme === 'dark' ? 'light' : 'dark',
    })),

  incCount: () => {
    const currentCount = get().count;
    const newCount = currentCount + 1;

    if (newCount > 5) {
      set({ count: newCount, theme: 'dark' });
    } else {
      set({ count: newCount });
    }
  },

  decCount: () =>
    set((state) => ({
      count: state.count - 1,
    })),
}));

export default useStore;
===== src/components/CounterWatcher.jsx =====
function CountWatcher() {
  return <p>CountWatcher</p>;
}

export default CountWatcher;
===== src/components/NameDisplay.jsx =====
import useStore from '../store/useStore';

function NameDisplay() {
  const name = useStore((state) => state.name);
  return <p>Name: {name}</p>;
}

export default NameDisplay;
===== src/components/ThemeToggle.jsx =====
function ThemeToggle() {
  return <p>ThemeToggle</p>;
}

export default ThemeToggle;
===== src/components/NameChanger.jsx =====
function NameChanger() {
  return <p>NameChanger</p>;
}

export default NameChanger;
